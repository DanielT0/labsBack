{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-esp.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","actions/users.js","actions/elements.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/laboratorios/logo.svg","actions/labs.js","components/laboratorios/labsModal.js","components/laboratorios/labRegister.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/labReducer.js","reducers/usersReducer.js","reducers/elementReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","console","log","types","login","user","type","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rId","rEmail","rPassword","rName","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","validator","isEmail","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","idU","isEmpty","isNumeric","tipo","errors","Navbar","useSelector","state","auth","to","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","idUsuario","observaciones","uiOpenModal","uiCloseModal","prepareEvents","events","map","fechaDevolucion","moment","toDate","fechaPrestamo","start","end","title","eventAddNew","eventLoaded","eventClearActiveEvent","eventUpdated","eventDeleted","userLoaded","users","elementLoaded","elements","customStyles","content","top","left","right","bottom","marginRight","transform","now","minutes","seconds","add","nowPlus1","clone","initEvent","cantidad","idElemento","_id","Modal","setAppElement","CalendarModal","modalOpen","ui","setdateStart","setdateEnd","activeEvent","calendar","formValues","setFormValues","cantidadValida","setCantidadValida","element","useEffect","usuarios","elementos","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","prestamo","getState","eventStartAddNew","id","elemento","nombre","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","prests","prestamos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","selectable","onSelectSlot","labAddNew","lab","labLoaded","labs","labUpdated","labDeleted","initLab","descripcion","LabModal","activeLab","labId","nombreValido","setNombreValido","descripcionValida","setDescripcionValida","ModalHeader","ModalBody","FormGroup","ModalFooter","Button","laboratorio","labStartAddNew","LabRegister","laboratorios","mostrarModalActualizar","handleDelete","labStartDelete","class","Container","Table","dato","PublicRoute","isAuthenticated","Component","component","rest","props","PrivateRoute","AppRouter","checking","exact","path","idElemento_","categoria","proyecto","activeElement","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3abddfd.chunk.js","sourcesContent":["const baseUrl= process.env.REACT_APP_AIP_URL\r\n\r\nconst fetchSinToken = (endpoint, data, method='GET') =>{\r\n    const url=`${ baseUrl }/${endpoint}`;\r\n\r\n    if(method=='GET'){\r\n        return fetch(url)\r\n    }\r\n    else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET') =>{\r\n    const url=`${ baseUrl }/${endpoint}`;\r\n    const token = localStorage.getItem('token') || \"\";\r\n    console.log(baseUrl, token)\r\n\r\n    if(method==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: \"[event] Events loaded\",\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n    labLoaded: \"[lab] Labs loaded\",\r\n    labAddNew: \"[lab] Add new\",\r\n    labSetActive: '[lab] Set Active',\r\n    labUpdated: '[lab] Lab updated',\r\n    labDeleted: '[lab] Lab deleted',\r\n    labClearActiveLab: '[lab] Clear active lab',\r\n\r\n    userLoaded: \"[user] Users loaded\",\r\n\r\n    elementLoaded: \"[element] Element loaded\"\r\n}","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n        console.log(body)\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }\r\n        else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n        console.log(body)\r\n        console.log(email, password)\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout=() =>{\r\n    return ( dispatch ) =>{\r\n        localStorage.clear()\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nconst logout = () =>({type: types.authLogout})\r\n\r\nexport const startRegister = ( idU, email, password, name) => {\r\n    return async (dispatch) => {\r\n        console.log(\"hiniiun\")\r\n        const tipo=''\r\n        const resp = await fetchSinToken('auth/new', { idU, email, password, name, tipo }, 'POST');\r\n        const body = await resp.json();\r\n        console.log(resp, body)\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            if(body.errors!=null){\r\n                Swal.fire('Error', body.errors.password.msg, 'error');\r\n            }\r\n            else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            // dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport './login.css';\r\nimport validator from 'validator';\r\n// import { createStore, applyMiddleware } from 'redux';\r\n\r\n// Note: this API requires redux@>=3.1.0\r\n// const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange] = useForm ({\r\n        lEmail: 'jajajajaime@gmail.com',\r\n        lPassword: '1234Ma#23'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm ({\r\n        rId: '',\r\n        rEmail: '',\r\n        rPassword: '',\r\n        rName: '',\r\n        rPassword1: '',\r\n        rPassword2: '' \r\n    });\r\n\r\n    const {  rId, rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    \r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        if(! validator.isEmail(lEmail)){\r\n            Swal.fire('Error', 'Ingrese un correo válido', 'error')\r\n            return\r\n        }\r\n        // console.log(lEmail, lPassword)\r\n        dispatch(startLogin( lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n        if(rPassword1!=rPassword2){\r\n            Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n            return\r\n        }\r\n        if(validator.isEmpty(rId)){\r\n            Swal.fire('Error', 'Ingrese un Id', 'error')\r\n            return\r\n        }\r\n        if(! validator.isEmail(rEmail)){\r\n            Swal.fire('Error', 'Ingrese un correo válido', 'error')\r\n            return\r\n        }\r\n        if(validator.isNumeric(rName) || validator.isEmpty(rName)){\r\n            Swal.fire('Error', 'El nombre no debe estar vacío ni contener números ni carácteres especiales', 'error')\r\n            return\r\n        }\r\n        dispatch( startRegister(rId, rEmail, rPassword1, rName) )\r\n        // dispatch(startLogin( lEmail, lPassword));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit = { handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value = {lEmail}\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value = {lPassword}\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                    <div className=\"form-group\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Id\"\r\n                                name=\"rId\"\r\n                                value={rId}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, Route, Router, Switch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const goToLab = () => {\r\n        console.log(\"buhbiubui\")\r\n        return (\r\n            <Route\r\n                exact\r\n                path=\"/\"\r\n            >\r\n                <Redirect to=\"/laboratorios\" />\r\n            </Route>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <div>\r\n                <Link to=\"/laboratorios\" className=\"btn btn-outline-primary\">Laboratorios</Link>\r\n            </div>\r\n\r\n            <div>\r\n                <Link to=\"/\" className=\"btn btn-outline-primary\">Préstamos</Link>\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-atl\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import userEvent from '@testing-library/user-event';\r\nimport React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {idUsuario, observaciones} = event;\r\n    return (\r\n        <div>\r\n            <span>{idUsuario}</span>\r\n            <strong>- {observaciones}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from \"moment\"\r\n\r\nexport const prepareEvents = ( events=[] )=>{\r\n    \r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            fechaDevolucion : moment(e.fechaDevolucion).toDate(),\r\n            fechaPrestamo: moment(e.fechaPrestamo).toDate(),\r\n            start: moment(e.fechaPrestamo).toDate(),\r\n            end: moment(e.fechaDevolucion).toDate(),\r\n            title: e.observaciones\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = ( event )=>{\n    return async(dispatch, getState) =>{\n        const {uid, name} = getState().auth;\n        try {\n            const resp = await fetchConToken('prestamos', event, 'POST');\n            const body= await resp.json();\n            if(body.ok){\n                event._id = body.prestamo._id\n                event.start= body.prestamo.fechaPrestamo\n                event.end=body.prestamo.fechaDevolucion\n                event.user={\n                    _id: uid,\n                    name: name\n                }\n                console.log(event)\n                dispatch(eventAddNew(event))\n            }\n        } catch (error) {\n            Swal('Error','Llene todas las casillas obligatorias', 'error')\n            console.log(error)\n        }\n\n        // console.log(body)\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventStartLoading = () =>{\n    return async(dispatch)=>{\n        try {\n            const resp = await fetchConToken('prestamos')\n            const body = await resp.json()\n\n            const prests = prepareEvents(body.prestamos)\n            dispatch(eventLoaded(prests))\n            console.log(prests)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventLoaded = (events) =>({\n    type: types.eventLoaded, \n    payload: events\n})\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdate =(event)=>{\n    return async(dispatch)=>{\n        try {\n            const resp = await fetchConToken(`prestamos/${event._id}`, event, 'PUT')\n            const body = await resp.json()\n            event.start= body.prestamo.fechaPrestamo\n            event.end=body.prestamo.fechaDevolucion\n            console.log(body)\n            if(body.ok){\n                dispatch(eventUpdated(event))\n            }else{\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete=()=>{\n    return async(dispatch, getState) => {\n\n        const {_id} = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchConToken(`prestamos/${_id}`, {}, 'DELETE')\n            const body = await resp.json()\n            console.log(body)\n            if(body.ok){\n                dispatch(eventDeleted())\n            }else{\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\nexport const eventDeleted = () => ({ type: types.eventDeleted });\n\n\n","import { fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const usersStartLoading = () =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken('usuarios')\r\n            const body = await resp.json()\r\n\r\n            const usuarios = body.usuarios\r\n            console.log(usuarios)\r\n            dispatch(userLoaded(usuarios))\r\n            // console.log(prests)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst userLoaded = (users) =>({\r\n    type: types.userLoaded, \r\n    payload: users\r\n})","import { fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const elementsStartLoading = () =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken('elementos')\r\n            const body = await resp.json()\r\n\r\n            const elementos = body.elementos\r\n            // console.log(usuarios)\r\n            console.log(elementos)\r\n            dispatch(elementLoaded(elementos))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst elementLoaded = (elements) =>({\r\n    type: types.elementLoaded, \r\n    payload: elements\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nimport Swal from 'sweetalert2';\r\nimport { usersStartLoading } from '../../actions/users';\r\nimport { elementsStartLoading } from '../../actions/elements';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    cantidad: '',\r\n    idUsuario: '',\r\n    idElemento: '',\r\n    observaciones: '',\r\n    fechaPrestamo: moment().toDate(),\r\n    fechaDevolucion: moment().add(2, 'hours').toDate(),\r\n    user: {\r\n        _id: '123',\r\n        name: 'fernando'\r\n    }\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [dateStart, setdateStart] = useState(now.toDate());\r\n    const [dateEnd, setdateEnd] = useState(nowPlus1.toDate());\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { observaciones, cantidad, idUsuario, idElemento, fechaPrestamo, fechaDevolucion } = formValues\r\n    const [cantidadValida, setCantidadValida] = useState(true)\r\n    const { users } = useSelector(state => state.user);\r\n    const { elements } = useSelector(state => state.element);\r\n\r\n    const [isOpen, setisOpen] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(usersStartLoading())\r\n        dispatch(elementsStartLoading())\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n            setdateStart(fechaPrestamo)\r\n            setdateEnd(fechaDevolucion)\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(fechaPrestamo)\r\n        const momentEnd = moment(fechaDevolucion)\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire(\"Error\", \"La fecha de devolución debe de ser mayor a la de préstamo\", \"error\")\r\n            return;\r\n        }\r\n\r\n        if (!cantidad) {\r\n            setCantidadValida(false);\r\n            return\r\n        }\r\n\r\n        if(idUsuario.trim().length<1 || idElemento.trim().length<1){\r\n            Swal.fire(\"Error\", \"Debe seleccionar un usuario y un elemento\", \"error\")\r\n            return;\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n        setCantidadValida(true);\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setdateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            fechaPrestamo: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setdateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            fechaDevolucion: e\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar Préstamo' : 'Nuevo préstamo'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Usuario</label>\r\n                    <select name=\"idUsuario\" id=\"idUsuario\" className=\"form-control\" value={idUsuario} onChange={handleInputChange}>\r\n                    <option value=\"\">-Seleccionar usuario-</option>\r\n                        {users.map((user) => <option value={user._id}>{user.name}</option>)}\r\n                    </select>\r\n                    <label>Elemento</label>\r\n                    <select name=\"idElemento\" id=\"idElemento\" className=\"form-control\" value={idElemento} onChange={handleInputChange}>\r\n                        <option value=\"\">-Seleccionar elemento--</option>\r\n                        {elements.map((elemento) => <option value={elemento._id}>{elemento.nombre}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora del préstamo</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={fechaPrestamo}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora devolución</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={fechaDevolucion}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Cantidad</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className={`form-control ${!cantidadValida && 'is-invalid'}`}\r\n                        placeholder=\"Cantidad\"\r\n                        name=\"cantidad\"\r\n                        value={cantidad}\r\n                        autoComplete=\"off\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Observaciones</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Observaciones\"\r\n                        rows=\"2\"\r\n                        name=\"observaciones\"\r\n                        value={observaciones}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar préstamo</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-esp';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [\r\n//     {\r\n//         cantidad: '',\r\n//         usuario: '',\r\n//         elemento: '',\r\n//         observaciones: '',\r\n//         start: moment().toDate(),\r\n//         end: moment().add(2, 'hours').toDate(),\r\n//         user:{\r\n//             _id:'123',\r\n//             name: 'fernando'\r\n//         }\r\n//     }\r\n// ]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const {uid }= useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive( e ))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.idUsuario)? \"#367CF7\" : '#465660',\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n\r\n        return {\r\n            style\r\n        };\r\n    }\r\n\r\n    const onSelectSlot = (e)=>{\r\n        dispatch(eventClearActiveEvent(e))\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={\r\n                    {\r\n                        event: CalendarEvent\r\n                    }\r\n                }\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                selectable={true}\r\n                onSelectSlot={onSelectSlot}\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n            \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import Swal from \"sweetalert2\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const labsStartLoading = () =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken('labs')\r\n            const body = await resp.json()\r\n\r\n            const labs = body.laboratorios\r\n            console.log(labs)\r\n            dispatch(labLoaded(labs))\r\n            // console.log(prests)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const labStartAddNew = ( lab )=>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchConToken('labs', lab, 'POST');\r\n            const body= await resp.json();\r\n            console.log(body)\r\n            if(body.ok){\r\n                lab._id = body.laboratorio._id\r\n                lab.nombre= body.laboratorio.nombre\r\n                lab.descripcion=body.laboratorio.descripcion\r\n                dispatch(labAddNew(lab))\r\n                console.log(lab)\r\n            }\r\n            else{\r\n                Swal.fire('Error',body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            // Swal('Error','Llene todas las casillas obligatorias', 'error')\r\n            console.log(error)\r\n        }\r\n\r\n        // console.log(body)\r\n    }\r\n}\r\n\r\nexport const labSetActive = (lab) => ({\r\n    type: types.labSetActive,\r\n    payload: lab\r\n});\r\n\r\nconst labAddNew = (lab) => ({\r\n    type: types.labAddNew,\r\n    payload: lab\r\n});\r\n\r\nexport const labClearActiveLab = () => ({ type: types.labClearActiveLab });\r\n\r\nconst labLoaded = (labs) =>({\r\n    type: types.labLoaded, \r\n    payload: labs\r\n})\r\n\r\nexport const labStartUpdate =(lab)=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            console.log(lab)\r\n            const resp = await fetchConToken(`labs/${lab._id}`, lab, 'PUT')\r\n            const body = await resp.json()\r\n            \r\n            if(body.ok){\r\n                dispatch(labUpdated(lab))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst labUpdated = ( lab ) => ({\r\n    type: types.labUpdated,\r\n    payload: lab\r\n});\r\n\r\nexport const labStartDelete=(lab)=>{\r\n    return async(dispatch) => {\r\n        const _id = lab._id\r\n        try {\r\n            const resp = await fetchConToken(`labs/${_id}`, {}, 'DELETE')\r\n            const body = await resp.json()\r\n            console.log(body)\r\n            if(body.ok){\r\n                dispatch(labDeleted(_id))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const labDeleted = (id) => ({ type: types.labDeleted, id: id});","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport validator from \"validator\";\r\nimport { labStartAddNew, labStartUpdate } from \"../../actions/labs\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst initLab = {\r\n    nombre: '',\r\n    descripcion: '',\r\n}\r\n\r\n// Modal\r\n\r\nexport const LabModal = () => {\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [formValues, setFormValues] = useState(initLab)\r\n    const { nombre, descripcion } = formValues\r\n    const { activeLab, labId } = useSelector(state => state.lab);\r\n\r\n    const [nombreValido, setNombreValido] = useState(true)\r\n    const [descripcionValida, setDescripcionValida] = useState(true)\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (activeLab) {\r\n            setFormValues(activeLab);\r\n        } else {\r\n            setFormValues(initLab);\r\n        }\r\n    }, [activeLab, setFormValues])\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(uiCloseModal());\r\n        setFormValues(initLab);\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (validator.isEmpty(nombre)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese el nombre\", \"error\")\r\n            setNombreValido(false);\r\n            setDescripcionValida(true);\r\n            return;\r\n        }\r\n        if (validator.isEmpty(descripcion)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese la descripción\", \"error\")\r\n            setDescripcionValida(false);\r\n            setNombreValido(true);\r\n            return;\r\n        }\r\n        if (activeLab) {\r\n            dispatch(labStartUpdate(formValues))\r\n        } else {\r\n            dispatch(labStartAddNew(formValues))\r\n        }\r\n        setDescripcionValida(true);\r\n        setNombreValido(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n\r\n            <ModalHeader>\r\n                <div><h3>{(activeLab) ? 'Editar laboratorio' : 'Nuevo laboratorio'} </h3></div>\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Nombre:\r\n              </label>\r\n                    <input\r\n                        className={`form-control ${!nombreValido && 'is-invalid'}`}\r\n\r\n                        name=\"nombre\"\r\n                        type=\"text\"\r\n                        value={nombre}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Descripcion:\r\n              </label>\r\n                    <input\r\n                        className={`form-control ${!descripcionValida && 'is-invalid'}`}\r\n                        name=\"descripcion\"\r\n                        type=\"text\"\r\n                        value={descripcion}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={handleSubmitForm}\r\n                >\r\n                    Insertar\r\n            </Button>\r\n                <Button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={closeModal}\r\n                >\r\n                    Cancelar\r\n            </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","import { Navbar } from \"../ui/Navbar\"\r\nimport React, { useEffect } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { LabModal } from \"./labsModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { labClearActiveLab, labSetActive, labsStartLoading, labStartDelete } from \"../../actions/labs\";\r\n\r\nconst data = [\r\n  { id: 1, personaje: \"Naruto\", anime: \"Naruto\" },\r\n  { id: 2, personaje: \"Goku\", anime: \"Dragon Ball\" },\r\n  { id: 3, personaje: \"Kenshin Himura\", anime: \"Rurouni Kenshin\" },\r\n  { id: 4, personaje: \"Monkey D. Luffy\", anime: \"One Piece\" },\r\n  { id: 5, personaje: \"Edward Elric\", anime: \"Fullmetal Alchemist: Brotherhood\"},\r\n  { id: 6, personaje: \"Seto Kaiba\", anime: \"Yu-Gi-Oh!\" },\r\n];\r\n\r\nexport const LabRegister = () => {\r\n    const state = {\r\n        data: data,\r\n        modalActualizar: false,\r\n        modalInsertar: false,\r\n        form: {\r\n            id: \"\",\r\n            personaje: \"\",\r\n            anime: \"\",\r\n        },\r\n    };\r\n\r\n    const { labs } = useSelector(state => state.lab);\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(labsStartLoading());\r\n    }, [dispatch])\r\n\r\n    // const mostrarModalActualizar = (dato) => {\r\n    //     setState({\r\n    //         form: dato,\r\n    //         modalActualizar: true,\r\n    //     });\r\n    // };\r\n\r\n    // const cerrarModalActualizar = () => {\r\n    //     setState({ modalActualizar: false });\r\n    // };\r\n\r\n    const mostrarModalInsertar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(labClearActiveLab())\r\n    };\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(labSetActive(e))\r\n    }\r\n\r\n    const cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    const handleDelete = (lab) => {\r\n        dispatch( labStartDelete(lab) );\r\n    }\r\n\r\n    // const editar = (dato) => {\r\n    //     var contador = 0;\r\n    //     var arreglo = state.data;\r\n    //     arreglo.map((registro) => {\r\n    //         if (dato.id == registro.id) {\r\n    //             arreglo[contador].personaje = dato.personaje;\r\n    //             arreglo[contador].anime = dato.anime;\r\n    //         }\r\n    //         contador++;\r\n    //     });\r\n    //     setState({ data: arreglo, modalActualizar: false });\r\n    // };\r\n\r\n    // const eliminar = (dato) => {\r\n    //     var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \" + dato.id);\r\n    //     if (opcion == true) {\r\n    //         var contador = 0;\r\n    //         var arreglo = state.data;\r\n    //         arreglo.map((registro) => {\r\n    //             if (dato.id == registro.id) {\r\n    //                 arreglo.splice(contador, 1);\r\n    //             }\r\n    //             contador++;\r\n    //         });\r\n    //         setState({ data: arreglo, modalActualizar: false });\r\n    //     }\r\n    // };\r\n\r\n    // const insertar = () => {\r\n    //     var valorNuevo = { ...state.form };\r\n    //     valorNuevo.id = state.data.length + 1;\r\n    //     var lista = state.data;\r\n    //     lista.push(valorNuevo);\r\n    //     setState({ modalInsertar: false, data: lista });\r\n    // }\r\n\r\n    // const handleChange = (e) => {\r\n    //     setState({\r\n    //         form: {\r\n    //             ...state.form,\r\n    //             [e.target.name]: e.target.value,\r\n    //         },\r\n    //     });\r\n    // };\r\n    return (\r\n        <div class=\"Div\">\r\n            {<Navbar />\r\n            /*\r\n            <form class=\"form\">\r\n                <br></br><label style={{ color: 'white', fontSize: '30px', text_shadow: '2px 2px 5px black' }}>Registro de Laboratorio</label>\r\n                <input type=\"id\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Nombre</label>\r\n                <input type=\"nombre\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Descripcion</label>\r\n                <input type=\"password\" class=\"inputT\" />\r\n                <br></br>\r\n                <br></br>\r\n            </form>\r\n            <div style={{ float: 'left', width: '15%', height: '15%' }}> </div>\r\n\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'left' }}>Atras</button>\r\n            <div style={{ float: 'right', width: '15%', height: '1%' }}> </div>\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'right' }}>Enviar</button>\r\n            <div class=\"container\"></div>\r\n            <div class=\"mx-auto col-sm-8 main-section\" id=\"myTab\" role=\"tablist\"></div>\r\n            <ul class=\"nav nav-tabs justify-content-end\"></ul>\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link active\" id=\"list-tab\" data-toggle=\"tab\" href=\"#list\" role=\"tab\" aria-controls=\"list\" aria-selected=\"false\">List</a>\r\n\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link\" id=\"form-tab\" data-toggle=\"tab\" href=\"#form\" role=\"tab\" aria-controls=\"form\" aria-selected=\"true\">Form</a>\r\n\r\n\r\n            <div class=\"tab-content\" id=\"myTabContent\"></div>\r\n            <div class=\"tab-pane fade show active\" id=\"list\" role=\"tabpanel\" aria-labelledby=\"list-tab\"></div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"form\" role=\"tabpanel\" aria-labelledby=\"form-tab\"></div> */}\r\n\r\n            <Container>\r\n                <br />\r\n                <Button color=\"success\"\r\n                 onClick={mostrarModalInsertar}\r\n                 >Crear</Button>\r\n                <br />\r\n                <br />\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripción</th>\r\n                            <th>Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {labs.map((dato) => (\r\n                            <tr key={dato._id}>\r\n                                <td>{dato._id}</td>\r\n                                <td>{dato.nombre}</td>\r\n                                <td>{dato.descripcion}</td>\r\n                                <td>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={() => mostrarModalActualizar(dato)}\r\n                                    >\r\n                                        Editar\r\n                    </Button>{\" \"}\r\n                                    <Button color=\"danger\" \r\n                                        onClick={() => handleDelete(dato)}\r\n                                    >Eliminar</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n\r\n            \r\n            <LabModal/>\r\n\r\n        </div>\r\n\r\n        //         <div class=\"Div\">\r\n\r\n        //             <form class=\"form\">\r\n        //                 <br><br> <label style=\"color: white; font-size: 30px; text-shadow: 2px 2px 5px black;\">Registro de Laboratorio</label>\r\n        //                     <br><br>\r\n        //                         <label class=\"labels\">Id de Laboratorio</label>\r\n        //                         <input type=\"id\" class=\"inputT\" />\r\n        //                         <br><br>\r\n        //                             <label class=\"labels\">Nombre</label>\r\n        //                             <input type=\"nombre\" class=\"inputT\" />\r\n        //                             <br><br>\r\n        //                                 <label class=\"labels\">Descripcion</label>\r\n        //                                 <input type=\"password\" class=\"inputT\" />\r\n        //                                 <br><br>\r\n\r\n        //                                     <br><br>\r\n        //   </form>\r\n        //                                         <div style=\"float:left; width:15%; height:1%;\"> </div>\r\n\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:left;\">Atras</button>\r\n        //                                         <div style=\"float:right; width:15%; height:1%;\r\n        // \"> </div>\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:right;\">Enviar</button>\r\n\r\n        // </div>\r\n    )\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { LabRegister } from '../components/laboratorios/labRegister';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    console.log(checking)\r\n    console.log(uid)\r\n    if(checking){\r\n        return <h5>Espere...</h5>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            exact \r\n                            path=\"/login\" \r\n                            component={ LoginScreen }\r\n                            isAuthenticated={ !!uid}\r\n                        />\r\n                        <PrivateRoute \r\n                            exact \r\n                            path=\"/\" \r\n                            component={ CalendarScreen }\r\n                            isAuthenticated={ !!uid}\r\n                        />\r\n                        <PrivateRoute \r\n                            exact \r\n                            path=\"/laboratorios\" \r\n                            component={ LabRegister}\r\n                            isAuthenticated={ !!uid}\r\n                        />\r\n\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking:true,\r\n    // uid:null,\r\n    // name:null\r\n}\r\n\r\nexport const authReducer = ( state =initialState, action ) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n            }\r\n\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import moment from 'moment';\n\nimport { types } from '../types/types';\n\n// {\n//     cantidad: '',\n//     idUsuario: '',\n//     idElemento: '',\n//     observaciones: '',\n//     fechaPrestamo: moment().toDate(),\n//     fechaDevolucion: moment().add(2, 'hours').toDate(),\n//     user:{\n//         _id:'123',\n//         name: 'fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [\n        {\n            title: 'Hoola',\n            start: moment().toDate(),\n            end: moment().add(2, 'hours').toDate(),\n            cantidad: '4',\n            idUsuario: '',\n            idElemento: '',\n            observaciones: '',\n            fechaPrestamo: moment().toDate(),\n            fechaDevolucion: moment().add(2, 'hours').toDate(),\n            user: {\n                _id: '123',\n                name: 'fernando'\n            }\n        }\n    ],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e._id === action.payload._id) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e._id !== state.activeEvent._id)\n                ),\n                activeEvent: null\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    labs: [\r\n        {\r\n            _id: '',\r\n            nombre: '',\r\n            descripcion: '',\r\n        }\r\n    ],\r\n    labId: '',\r\n    activeLab: null,\r\n    \r\n};\r\n\r\nexport const labsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.labLoaded:\r\n            return {\r\n                ...state,\r\n                labs: [...action.payload]\r\n            }\r\n        case types.labAddNew:\r\n            return {\r\n                ...state,\r\n                labs: [\r\n                    ...state.labs,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.labSetActive:\r\n            return {\r\n                ...state,\r\n                activeLab: action.payload,\r\n                labId: action.payload._id\r\n            }\r\n        \r\n        case types.labClearActiveLab:\r\n            return {\r\n                ...state,\r\n                activeLab: null\r\n            }\r\n\r\n        case types.labUpdated:\r\n            return {\r\n                ...state,\r\n                labs: state.labs.map(\r\n                    e => (e._id === action.payload._id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.labDeleted:\r\n            return {\r\n                ...state,\r\n                labs: state.labs.filter(\r\n                    e => (e._id !== action.id)\r\n                ),\r\n                labId:null,\r\n                activeLab: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            _id: '',\r\n            idU: '',\r\n            name: '',\r\n            email:'',\r\n        }\r\n    ],\r\n    \r\n};\r\n\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.userLoaded:\r\n            return {\r\n                ...state,\r\n                users: [...action.payload]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    elements: [\r\n        {\r\n            _id: '',\r\n            idElemento_:'',\r\n            nombre: '',\r\n            descripcion: '',\r\n            categoria:'',\r\n            laboratorio:'',\r\n            proyecto:''\r\n        }\r\n    ],\r\n    activeElement: null,\r\n    \r\n};\r\n\r\nexport const elementsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.elementLoaded:\r\n            return {\r\n                ...state,\r\n                elements: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { labsReducer } from './labReducer';\r\nimport { usersReducer } from './usersReducer';\r\nimport { elementsReducer } from './elementReducer';\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n    lab: labsReducer,\r\n    user: usersReducer,\r\n    element: elementsReducer\r\n})\r\n\r\n","// import { createStore, combineReducers } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport {rootReducer} from '../reducers/rootReducer';\r\nimport { createStore, compose,  applyMiddleware } from 'redux';\r\n\r\n// const reducers = combineReducers({\r\n//     auth: authReducer\r\n// })\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined'  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/> \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n// import thunk from \"redux-thunk\" \n        \n// const store = createStore(rootReducer, applyMiddleware(thunk));\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}